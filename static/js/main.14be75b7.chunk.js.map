{"version":3,"sources":["index.js"],"names":["uniqueKey","Tabla","state","rows","addRow","chData","setState","concat","carnet","schedule","late","i","this","splice","map","row","console","log","key","Date","toLocaleDateString","value","className","handleDeleteRow","Form","callBackFromParent","scope","id","renderRows","React","Component","props","handleClick","document","getElementById","options","realSchedule","selectedIndex","text","parseLateSwitch","checked","message","htmlFor","name","type","onClick","renderH1","renderInput","renderSelect","renderSwitch","renderInsertBtn","ReactDOM","render"],"mappings":"6OAIIA,G,MAAY,GAEVC,E,2MACJC,MAAQ,CACNC,KAAM,I,EAGRC,OAAS,SAAAC,GACP,EAAKC,SAAS,CACZH,KAAM,EAAKD,MAAMC,KAAKI,OAAO,CAC3B,CAAEC,OAAQH,EAAOG,OAAQC,SAAUJ,EAAOI,SAAUC,KAAML,EAAOK,UAGrEV,K,+EAGcW,GACd,IAAIR,EAAI,YAAOS,KAAKV,MAAMC,MAC1BA,EAAKU,OAAOF,EAAG,GACfC,KAAKN,SAAS,CACZH,KAAMA,M,mCAII,IAAD,OACX,OAAOS,KAAKV,MAAMC,KAAKW,KAAI,SAAAC,GAAQ,IAAD,EAEhC,OADAC,QAAQC,IAAIF,GAEV,wBAAIG,IAAKlB,GACP,4BAAKe,EAAIP,QACT,4BAAKO,EAAIN,UACT,6BAAK,IAAIU,MAAOC,sBAChB,4BAAKL,EAAIL,MACT,4BACE,+BACEW,MAAOrB,EACPsB,UAAU,OAFZ,0BAGY,cAHZ,yBAIW,kBAAM,EAAKC,qBAJtB,kB,+BAeR,OACE,yBAAKD,UAAU,aACb,kBAACE,EAAD,CAAMC,mBAAoBb,KAAKR,SAC/B,iCACE,2BAAOkB,UAAU,qBACf,+BACE,wBAAIA,UAAU,cACZ,wBAAII,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,0BACA,wBAAIA,MAAM,OAAV,mBACA,wBAAIA,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,cAGJ,2BAAOC,GAAG,cAAcf,KAAKgB,qB,GA7DrBC,IAAMC,WAqEpBN,E,YACJ,WAAYO,GAAQ,IAAD,8BACjB,4CAAMA,KAuERC,YAAc,WACZ,IAAIxB,EAASyB,SAASC,eAAe,gBAAgBb,MACjDZ,EAAWwB,SAASC,eAAe,kBAAkBC,QACrDC,EAAe3B,EAASA,EAAS4B,eAAeC,KAChD5B,EAAO6B,EAAgBN,SAASC,eAAe,eAAeM,SAClE,EAAKT,MAAMN,mBAAmB,CAC5BjB,OAAQA,EACRC,SAAU2B,EACV1B,KAAMA,KAhFS,E,0EAIN+B,GACX,OACE,yBAAKnB,UAAU,cACb,2BAAOoB,QAAQ,YAAf,0BACA,4BAAQC,KAAK,WAAWrB,UAAU,eAAeK,GAAG,kBAClD,gCAASc,EAAQ,IACjB,gCAASA,EAAQ,IACjB,gCAASA,EAAQ,IACjB,gCAASA,EAAQ,IACjB,gCAASA,EAAQ,IACjB,gCAASA,EAAQ,Q,oCAOvB,OACE,yBAAKnB,UAAU,cACb,2BAAOoB,QAAQ,SAASpB,UAAU,2BAAlC,qBACqB,KAErB,2BACEA,UAAU,eACVsB,KAAK,OACLD,KAAK,SACLhB,GAAG,oB,+BAMFc,GACP,OAAO,4BAAKA,K,qCAIZ,OACE,yBAAKnB,UAAU,cACb,yBAAKA,UAAU,gCACb,2BACEsB,KAAK,WACLtB,UAAU,uBACVK,GAAG,gBAEL,2BAAOL,UAAU,uBAAuBoB,QAAQ,eAAhD,2B,wCAQW,IAAD,OAChB,OACE,yBAAKpB,UAAU,cACb,4BACEsB,KAAK,SACLtB,UAAU,iBACVK,GAAG,aACHkB,QAAS,kBAAM,EAAKb,gBAJtB,e,+BAyBJ,OACE,yBAAKV,UAAU,aACb,yBAAKA,UAAU,aACZV,KAAKkC,SAAS,2BACdlC,KAAKmC,cACLnC,KAAKoC,aAAa,CACjB,wBACA,0BACA,+BACA,0BACA,0BACA,6BAEDpC,KAAKqC,eACLrC,KAAKsC,wB,GApGGrB,IAAMC,WA2GzBqB,IAASC,OAAO,kBAACnD,EAAD,MAAWgC,SAASC,eAAe,SAEnD,IAAIK,EAAkB,SAAAlB,GACpB,OAAIA,EACK,QAEA,a","file":"static/js/main.14be75b7.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nvar uniqueKey = 0;\n\nclass Tabla extends React.Component {\n  state = {\n    rows: []\n  };\n\n  addRow = chData => {\n    this.setState({\n      rows: this.state.rows.concat([\n        { carnet: chData.carnet, schedule: chData.schedule, late: chData.late }\n      ])\n    });\n    uniqueKey++;\n  };\n\n  handleDeleteRow(i) {\n    let rows = [...this.state.rows];\n    rows.splice(i, 1);\n    this.setState({\n      rows: rows\n    });\n  }\n\n  renderRows() {\n    return this.state.rows.map(row => {\n      console.log(row);\n      return (\n        <tr key={uniqueKey}>\n          <td>{row.carnet}</td>\n          <td>{row.schedule}</td>\n          <td>{new Date().toLocaleDateString()}</td>\n          <td>{row.late}</td>\n          <td>\n            <button\n              value={uniqueKey}\n              className=\"btn\"\n              className=\"btn-danger\"\n              onClick={() => this.handleDeleteRow()}\n            >\n              Drop\n            </button>\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Form callBackFromParent={this.addRow} />\n        <section>\n          <table className=\"table table-hover\">\n            <thead>\n              <tr className=\"table-dark\">\n                <th scope=\"col\">Carnet</th>\n                <th scope=\"col\">Horario de laboratorio</th>\n                <th scope=\"col\">Hora de ingreso</th>\n                <th scope=\"col\">¿Tarde?</th>\n                <th scope=\"col\">Eliminar</th>\n              </tr>\n            </thead>\n            <tbody id=\"table_body\">{this.renderRows()}</tbody>\n          </table>\n        </section>\n      </div>\n    );\n  }\n}\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderSelect(message) {\n    return (\n      <div className=\"form-group\">\n        <label htmlFor=\"schedule\">Seleccione el horario:</label>\n        <select name=\"schedule\" className=\"form-control\" id=\"schedule_field\">\n          <option>{message[0]}</option>\n          <option>{message[1]}</option>\n          <option>{message[2]}</option>\n          <option>{message[3]}</option>\n          <option>{message[4]}</option>\n          <option>{message[5]}</option>\n        </select>\n      </div>\n    );\n  }\n\n  renderInput() {\n    return (\n      <div className=\"form-group\">\n        <label htmlFor=\"carnet\" className=\"col-sm-2 col-form-label\">\n          Ingrese el carnet:{\" \"}\n        </label>\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          name=\"carnet\"\n          id=\"carnet_field\"\n        />\n      </div>\n    );\n  }\n\n  renderH1(message) {\n    return <h1>{message}</h1>;\n  }\n\n  renderSwitch() {\n    return (\n      <div className=\"form-group\">\n        <div className=\"custom-control custom-switch\">\n          <input\n            type=\"checkbox\"\n            className=\"custom-control-input\"\n            id=\"late_switch\"\n          />\n          <label className=\"custom-control-label\" htmlFor=\"late_switch\">\n            ¿Llegó tarde?\n          </label>\n        </div>\n      </div>\n    );\n  }\n\n  renderInsertBtn() {\n    return (\n      <div className=\"form-group\">\n        <button\n          type=\"button\"\n          className=\"btn btn-danger\"\n          id=\"submit_btn\"\n          onClick={() => this.handleClick()}\n        >\n          Ingresar\n        </button>\n      </div>\n    );\n  }\n\n  handleClick = () => {\n    let carnet = document.getElementById(\"carnet_field\").value;\n    let schedule = document.getElementById(\"schedule_field\").options;\n    let realSchedule = schedule[schedule.selectedIndex].text;\n    let late = parseLateSwitch(document.getElementById(\"late_switch\").checked);\n    this.props.callBackFromParent({\n      carnet: carnet,\n      schedule: realSchedule,\n      late: late\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron\">\n          {this.renderH1(\"Registro de laboratorio\")}\n          {this.renderInput()}\n          {this.renderSelect([\n            \"Lunes de 9:00 a 11.00\",\n            \"Martes de 13:30 a 15:30\",\n            \"Miércoles de 9:00 a 11.00\",\n            \"Jueves de 13:30 a 15:30\",\n            \"Viernes de 9:00 a 11.00\",\n            \"Viernes de 15:30 a 17:30\"\n          ])}\n          {this.renderSwitch()}\n          {this.renderInsertBtn()}\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Tabla />, document.getElementById(\"root\"));\n\nvar parseLateSwitch = value => {\n  if (value) {\n    return \"Tarde\";\n  } else {\n    return \"A tiempo\";\n  }\n};\n"],"sourceRoot":""}